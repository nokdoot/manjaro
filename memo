sudo pacman-mirrors --country South_Korea

sudo pacman -Syu

yes | sudo pacman -S xclip
yes | sudo pacman -S flameshot
yes | sudo pacman -Rs palemoon-bin

yes | sudo pacman -S community/redshift
# redshift-gtk -> right click -> autostart

# 배터리관리 gui
yes | pamac install tlpui

yes | sudo pacman -S firefox
# about:config에서 
layout.css.devPixelsPerPx 값을 1.4로 지정 (전체크기를 1.4배로 증가시킴)

install_pulse

yes | sudo pacman -S git bash-completion

yes | sudo pacman -S uim

# 설치 후 추가 커맨드 필요!
yes | sudo pacman -S community/libinput-gestures

# gitk
# tk 만 설치하면 gitk 는 알아서 추가되드라. 안되면 설치를 찾아보자. 
yes | sudo pacman -S tk

# 두 번째 줄에서 host, guest 를 위한 module 을 설치할 때 종류가 되게 많은데 숫자는 현재 리눅스 커널버전을 의미한
# 이것을 설치할 당시에는 만자로 커널은 5.2.11...였으며 community 의 52 버박 모듈버전은 5.2.10 버전을 위한 것이었음
# 아마도 extra 버전이 더 최신것을 지원하는듯, extra 설치하니까 잘 됨
sudo pacman -S community/virtualbox community/virtualbox-guest-dkms community/virtualbox-guest-iso community/virtualbox-guest-utils community/virtualbox-host-dkms
sudo pacman -S extra/linux52-virtualbox-guest-modules extra/linux52-virtualbox-host-modules
# modprobe 를 해야하는거 같은데 일단 실행해보고 안되면 찾아보기.

# 그래픽 드라이버가 어떤게 설치되었나 확인.
# 그래픽 드리이버는 딱히 문제가 되지 않는다면 건드리지 말자.
mhwd -li 
sudo mhwd --remove pci video-linux
sudo mhwd --install pci video-vesa

yes | sudo pacman -S clementine

yes | sudo pacman -S extra/noto-fonts extra/noto-fonts-cjk extra/noto-fonts-emoji

yes | sudo pacman -S xreader

yes | sudo pacman -S xviewer

# idea to dmenu
# sudo ln -s ~/....idea.sh /bin/idea

yes | sudo pacman -S extra/jdk11-openjdk extra/openjdk11-doc extra/openjdk11-src

sudo pacman -S mysql
mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql
systemctl enable mysqld
systemctl start mysqld
mariadb 실행해서 디비 생성 시작

# /etc/fstab
# uid, gid 는 각각 'id -u' 'id -g' 명령어로 알 수 있다.
/dev/sdb1				  /mnt/hdd1	 ntfs-3g uid=1000,gid=1000    0       0
/dev/sdc1				  /mnt/hdd2	 ntfs-3g uid=1000,gid=1000    0       0

# 윈도우와 듀얼부팅 시 마운트 된 하드가 read-only 모드로 돌아간 경우.
sudo umount /dev/장치
sudo ntfsfix /dev/장치
sudo ntfs-3g /dev/장치 경로

# 터미널에서 중복되는 명령어 합치기
# ~/.bashrc
echo 'export HISTCONTROL="ignoredups"' >> ~/.bashrc

# i3
# i3 폴더말고 config_... 에 있는 config 를 사용하자.

# printer
cups
cups 를 서비스에 등록해야하는지 알아서 등록되는지 확인.
삼성프린터드라이버 sh 파일로 설치.
localhost:631 에 들어가서 프린터 등록 m2020

# 노트북에서 No battery 가 뜬다면 
# /sys/class/power_supply/ 에 BAT0 같은 배터리가 없다는 것임
# upower -d 를 통해 배터리가 어떤 이름으로 등록되어 있는지 확인, 그램의 경우 CMB0 이었음

i3statas.conf 파일 battery 옵션부분에
path="/sys/class/power_supply/CMB%d/uevent"
를 추가

rm /etc/localtime 해보고 시간이 바뀌는지 보자
ln -s /usr/share/zoneinfo/Asia/Seoul /etc/localtime
정 안되면
https://wiki.archlinux.org/index.php/Installation_guide_(%ED%95%9C%EA%B5%AD%EC%96%B4)#%EC%8B%9C%EA%B0%84%EB%8C%80
참고

echo "source \"$HOME/.profile\"" >> ~/.bashrc
# 터미널 새탭과 비슷한 효과
echo "source \"/etc/profile.d/vte.sh\"" >> ~/.bashrc


# docker
yes | sudo pacman -S community/docker
systemctl enable docker
systemctl start docker
sudo usermod -aG docker $USER
newgrp docker

# chrome
git clone https://aur.archlinux.org/google-chrome.git
cd google-chrome
makepkg -s
sudo pacman -U google-chrome*.tar.xz


# branch name to terminal
# .bashrc 파일의 PS1 환경변수에 다음을 추가.
\[\033[33m\]$(parse_git_branch)\[\033[00m\]

포맷전에는 
PS1='\[\033[01;32m\][\u@\h\[\033[01;37m\] \[\033[01;37m\]\w\[\033[01;32m\]]\[\033[33m\]$(parse_git_branch)\[\033[01;32m\]\$\[\033[00m\] '

를 썼음.

이 함수도 추가.
parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

